<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.lingc.oilcard.dao.UserMapper" >
  <resultMap id="BaseResultMap" type="com.lingc.oilcard.domain.entity.User" >
    <id column="userid" property="userid" jdbcType="BIGINT" />
    <result column="username" property="username" jdbcType="VARCHAR" />
    <result column="phone" property="phone" jdbcType="VARCHAR" />
    <result column="address" property="address" jdbcType="VARCHAR" />
    <result column="nickName" property="nickname" jdbcType="VARCHAR" />
    <result column="gender" property="gender" jdbcType="VARCHAR" />
    <result column="province" property="province" jdbcType="VARCHAR" />
    <result column="country" property="country" jdbcType="VARCHAR" />
    <result column="avatarUrl" property="avatarurl" jdbcType="VARCHAR" />
    <result column="openid" property="openid" jdbcType="VARCHAR" />
    <result column="firstime" property="firstime" jdbcType="VARCHAR" />
    <result column="integral" property="integral" jdbcType="DOUBLE" />
  </resultMap>
  <sql id="Base_Column_List" >
    userid, username, phone, address, nickName, gender, province, country, avatarUrl, 
    openid, firstime, integral
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from user
    where userid = #{userid,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from user
    where userid = #{userid,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.lingc.oilcard.domain.entity.User" >
    insert into user (userid, username, phone, 
      address, nickName, gender, 
      province, country, avatarUrl, 
      openid, firstime, integral
      )
    values (#{userid,jdbcType=BIGINT}, #{username,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, 
      #{address,jdbcType=VARCHAR}, #{nickname,jdbcType=VARCHAR}, #{gender,jdbcType=VARCHAR}, 
      #{province,jdbcType=VARCHAR}, #{country,jdbcType=VARCHAR}, #{avatarurl,jdbcType=VARCHAR}, 
      #{openid,jdbcType=VARCHAR}, #{firstime,jdbcType=VARCHAR}, #{integral,jdbcType=DOUBLE}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.lingc.oilcard.domain.entity.User" >
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="userid != null" >
        userid,
      </if>
      <if test="username != null" >
        username,
      </if>
      <if test="phone != null" >
        phone,
      </if>
      <if test="address != null" >
        address,
      </if>
      <if test="nickname != null" >
        nickName,
      </if>
      <if test="gender != null" >
        gender,
      </if>
      <if test="province != null" >
        province,
      </if>
      <if test="country != null" >
        country,
      </if>
      <if test="avatarurl != null" >
        avatarUrl,
      </if>
      <if test="openid != null" >
        openid,
      </if>
      <if test="firstime != null" >
        firstime,
      </if>
      <if test="integral != null" >
        integral,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="userid != null" >
        #{userid,jdbcType=BIGINT},
      </if>
      <if test="username != null" >
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="address != null" >
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="nickname != null" >
        #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="gender != null" >
        #{gender,jdbcType=VARCHAR},
      </if>
      <if test="province != null" >
        #{province,jdbcType=VARCHAR},
      </if>
      <if test="country != null" >
        #{country,jdbcType=VARCHAR},
      </if>
      <if test="avatarurl != null" >
        #{avatarurl,jdbcType=VARCHAR},
      </if>
      <if test="openid != null" >
        #{openid,jdbcType=VARCHAR},
      </if>
      <if test="firstime != null" >
        #{firstime,jdbcType=VARCHAR},
      </if>
      <if test="integral != null" >
        #{integral,jdbcType=DOUBLE},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.lingc.oilcard.domain.entity.User" >
    update user
    <set >
      <if test="username != null" >
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="address != null" >
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="nickname != null" >
        nickName = #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="gender != null" >
        gender = #{gender,jdbcType=VARCHAR},
      </if>
      <if test="province != null" >
        province = #{province,jdbcType=VARCHAR},
      </if>
      <if test="country != null" >
        country = #{country,jdbcType=VARCHAR},
      </if>
      <if test="avatarurl != null" >
        avatarUrl = #{avatarurl,jdbcType=VARCHAR},
      </if>
      <if test="openid != null" >
        openid = #{openid,jdbcType=VARCHAR},
      </if>
      <if test="firstime != null" >
        firstime = #{firstime,jdbcType=VARCHAR},
      </if>
      <if test="integral != null" >
        integral = #{integral,jdbcType=DOUBLE},
      </if>
    </set>
    where userid = #{userid,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lingc.oilcard.domain.entity.User" >
    update user
    set username = #{username,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      nickName = #{nickname,jdbcType=VARCHAR},
      gender = #{gender,jdbcType=VARCHAR},
      province = #{province,jdbcType=VARCHAR},
      country = #{country,jdbcType=VARCHAR},
      avatarUrl = #{avatarurl,jdbcType=VARCHAR},
      openid = #{openid,jdbcType=VARCHAR},
      firstime = #{firstime,jdbcType=VARCHAR},
      integral = #{integral,jdbcType=DOUBLE}
    where userid = #{userid,jdbcType=BIGINT}
  </update>
</mapper>